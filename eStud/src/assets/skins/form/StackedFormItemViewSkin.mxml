<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
		alpha.disabledStates=".5" >
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.FormItem")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[         
			import mx.events.FlexEvent;
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				if (isNaN(getStyle("backgroundColor")))
				{
					background.visible = false;
				}
				else
				{
					background.visible = true;
					bgFill.color = getStyle("backgroundColor");
					bgFill.alpha = getStyle("backgroundAlpha");
				}
				
				var indicatorSource:Object; 
				if (currentState == "error" || currentState == "requiredAndError")
					indicatorSource = getStyle("errorIndicatorSource");
				else if (currentState == "required" || "requiredAndDisabled")
					indicatorSource = getStyle("requiredIndicatorSource");
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			override public function setCurrentState(stateName:String, playTransition:Boolean=true):void
			{
				super.setCurrentState(stateName, playTransition);
				invalidateDisplayList();
			}
			

			 

		]]>        
	</fx:Script>    
	
	<s:states>
		<s:State name="normal" />
		<s:State name="img" />
		<s:State name="disabled" stateGroups="disabledStates"/>	
		<s:State name="error" stateGroups="errorStates"/>	
		<s:State name="required" stateGroups="requiredStates"/>	
		<s:State name="requiredAndDisabled" stateGroups="requiredStates, disabledStates"/>
		<s:State name="requiredAndError" stateGroups="requiredStates, errorStates"/>	
	</s:states>
	
	<s:layout>
		<s:FormItemLayout>
			<s:constraintColumns>
				<s:ConstraintColumn id="sequenceCol" />
				<s:ConstraintColumn id="contentCol" />
				<s:ConstraintColumn id="helpCol" />
			</s:constraintColumns>         
			<s:constraintRows>
				<s:ConstraintRow id="row1" baseline="maxAscent:10"/>
				<s:ConstraintRow id="row2"/>
			</s:constraintRows>  
		</s:FormItemLayout>
	</s:layout>    
	
	<!--- Defines the appearance of the FormItem's background. -->
	<s:Rect id="background" left="0" right="0"   top="0" bottom="0">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill" color="#ff0000"/>
		</s:fill>
		 
	</s:Rect>
	
	 
	<s:Label id="labelDisplay" 
			 left="contentCol:0" right="contentCol:5"
			 bottom="row1:5" baseline="row1:0"/>
	<s:Group id="contentGroup" minWidth="150"
			 showErrorTip="false" showErrorSkin="true"
			 left="contentCol:0" right="contentCol:0" 
			 top="row2:0" bottom="row2:0" baseline="row2:0" >
		<!--<s:layout>
			<s:VerticalLayout/>
		</s:layout>-->
	</s:Group>
</s:Skin>